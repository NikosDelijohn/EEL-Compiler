/* + ----------------- [ Call ] ----------------- + *
 * + Simply used to call a function.              + *
 * + In the case of nested functions we expect    + *
 * + something like the following example         + *
 * + If we have for example:                      + *
 * +    call func( func_1(a,b), func_2(c,d)):     + *
 * +        ===========================           + *
 * +        |("par","a","in/inout","_")|          + *
 * +        |("par","b","in/inout","_")|          + *
 * +        |("ret","T_0","_","_")     |          + *
 * +        |("call","func_1","_","_") |          + *
 * +        |("par","c","in/inout","_")|          + *
 * +        |("par","d","in/inout","_")|          + *
 * +        |("ret","T_1","_","_")     |          + *
 * +        |("call","func_2","_","_") |          + *
 * +        |("par","T_0","_","_")     |          + *
 * +        |("par","T_1","_","_")     |          + *
 * +        |("call","func","_","_")   |          + *
 * +        ===========================           + *
 * + -------------------------------------------- + *
 */

program NestedFunctions

    call max( in max(in a, in b), in max(inout c, inout d));
    
    integer := max( in max(inout a, inout b), in max(in c, in d))

endprogram

 /* + ----------------------------------------------- + *   
  * +       Copyright (C) Nick I. Deligiannis         + *
  * + ----------------------------------------------- + *
  */
